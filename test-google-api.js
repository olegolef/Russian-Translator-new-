// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Google Translate API
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node test-google-api.js

const API_KEY = process.env.REACT_APP_GOOGLE_TRANSLATE_API_KEY || 'your_api_key_here';

async function testGoogleTranslate() {
  if (API_KEY === 'your_api_key_here') {
    console.log('‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
    console.log('–ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á –≤ —Ñ–∞–π–ª–µ .env');
    return;
  }

  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google Translate API...');
  
  try {
    const response = await fetch(
      `https://translation.googleapis.com/language/translate/v2?key=${API_KEY}`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          q: 'hello',
          source: 'en',
          target: 'ru',
          format: 'text'
        })
      }
    );

    if (response.ok) {
      const data = await response.json();
      const translation = data.data.translations[0].translatedText;
      console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      console.log(`–ü–µ—Ä–µ–≤–æ–¥ "hello" -> "${translation}"`);
    } else {
      const error = await response.text();
      console.log('‚ùå –û—à–∏–±–∫–∞ API:', error);
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error.message);
  }
}

testGoogleTranslate();
